//#line 2 "/opt/ros/indigo/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
// 
// File autogenerated for the bluefox2 package 
// by the dynamic_reconfigure package.
// Please do not edit.
// 
// ********************************************************/

#ifndef __bluefox2__BLUEFOX2DYNCONFIG_H__
#define __bluefox2__BLUEFOX2DYNCONFIG_H__

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace bluefox2
{
  class Bluefox2DynConfigStatics;
  
  class Bluefox2DynConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l, 
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }
      
      virtual void clamp(Bluefox2DynConfig &config, const Bluefox2DynConfig &max, const Bluefox2DynConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const Bluefox2DynConfig &config1, const Bluefox2DynConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, Bluefox2DynConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const Bluefox2DynConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, Bluefox2DynConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const Bluefox2DynConfig &config) const = 0;
      virtual void getValue(const Bluefox2DynConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;
    
    template <class T>
    class ParamDescription : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string name, std::string type, uint32_t level, 
          std::string description, std::string edit_method, T Bluefox2DynConfig::* f) :
        AbstractParamDescription(name, type, level, description, edit_method),
        field(f)
      {}

      T (Bluefox2DynConfig::* field);

      virtual void clamp(Bluefox2DynConfig &config, const Bluefox2DynConfig &max, const Bluefox2DynConfig &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;
        
        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const Bluefox2DynConfig &config1, const Bluefox2DynConfig &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, Bluefox2DynConfig &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const Bluefox2DynConfig &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, Bluefox2DynConfig &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const Bluefox2DynConfig &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const Bluefox2DynConfig &config, boost::any &val) const
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, Bluefox2DynConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    template<class T, class PT>
    class GroupDescription : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string name, std::string type, int parent, int id, bool s, T PT::* f) : AbstractGroupDescription(name, type, parent, id, s), field(f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, Bluefox2DynConfig &top) const
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T (PT::* field);
      std::vector<Bluefox2DynConfig::AbstractGroupDescriptionConstPtr> groups;
    };
    
class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(Bluefox2DynConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("fps"==(*_i)->name){fps = boost::any_cast<double>(val);}
        if("width"==(*_i)->name){width = boost::any_cast<int>(val);}
        if("height"==(*_i)->name){height = boost::any_cast<int>(val);}
        if("idpf"==(*_i)->name){idpf = boost::any_cast<int>(val);}
        if("cbm"==(*_i)->name){cbm = boost::any_cast<int>(val);}
        if("aec"==(*_i)->name){aec = boost::any_cast<bool>(val);}
        if("expose_us"==(*_i)->name){expose_us = boost::any_cast<int>(val);}
        if("agc"==(*_i)->name){agc = boost::any_cast<bool>(val);}
        if("gain_db"==(*_i)->name){gain_db = boost::any_cast<double>(val);}
        if("acs"==(*_i)->name){acs = boost::any_cast<int>(val);}
        if("des_grey_value"==(*_i)->name){des_grey_value = boost::any_cast<int>(val);}
        if("hdr"==(*_i)->name){hdr = boost::any_cast<bool>(val);}
        if("dcfm"==(*_i)->name){dcfm = boost::any_cast<int>(val);}
        if("cpc"==(*_i)->name){cpc = boost::any_cast<int>(val);}
        if("ctm"==(*_i)->name){ctm = boost::any_cast<int>(val);}
        if("cts"==(*_i)->name){cts = boost::any_cast<int>(val);}
        if("request"==(*_i)->name){request = boost::any_cast<int>(val);}
        if("wbp"==(*_i)->name){wbp = boost::any_cast<int>(val);}
        if("r_gain"==(*_i)->name){r_gain = boost::any_cast<double>(val);}
        if("g_gain"==(*_i)->name){g_gain = boost::any_cast<double>(val);}
        if("b_gain"==(*_i)->name){b_gain = boost::any_cast<double>(val);}
      }
    }

    double fps;
int width;
int height;
int idpf;
int cbm;
bool aec;
int expose_us;
bool agc;
double gain_db;
int acs;
int des_grey_value;
bool hdr;
int dcfm;
int cpc;
int ctm;
int cts;
int request;
int wbp;
double r_gain;
double g_gain;
double b_gain;

    bool state;
    std::string name;

    
}groups;



//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double fps;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int width;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int height;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int idpf;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int cbm;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool aec;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int expose_us;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool agc;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double gain_db;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int acs;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int des_grey_value;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool hdr;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int dcfm;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int cpc;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int ctm;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int cts;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int request;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int wbp;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double r_gain;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double g_gain;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double b_gain;
//#line 218 "/opt/ros/indigo/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("Bluefox2DynConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }
    
    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }
    
    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const Bluefox2DynConfig &__max__ = __getMax__();
      const Bluefox2DynConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const Bluefox2DynConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }
    
    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const Bluefox2DynConfig &__getDefault__();
    static const Bluefox2DynConfig &__getMax__();
    static const Bluefox2DynConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();
    
  private:
    static const Bluefox2DynConfigStatics *__get_statics__();
  };
  
  template <> // Max and min are ignored for strings.
  inline void Bluefox2DynConfig::ParamDescription<std::string>::clamp(Bluefox2DynConfig &config, const Bluefox2DynConfig &max, const Bluefox2DynConfig &min) const
  {
    return;
  }

  class Bluefox2DynConfigStatics
  {
    friend class Bluefox2DynConfig;
    
    Bluefox2DynConfigStatics()
    {
Bluefox2DynConfig::GroupDescription<Bluefox2DynConfig::DEFAULT, Bluefox2DynConfig> Default("Default", "", 0, 0, true, &Bluefox2DynConfig::groups);
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.fps = 1.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.fps = 200.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.fps = 20.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<double>("fps", "double", 0, "Frames per second", "", &Bluefox2DynConfig::fps)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<double>("fps", "double", 0, "Frames per second", "", &Bluefox2DynConfig::fps)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.width = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.width = 2048;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.width = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("width", "int", 0, "AOI width", "", &Bluefox2DynConfig::width)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("width", "int", 0, "AOI width", "", &Bluefox2DynConfig::width)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.height = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.height = 2048;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.height = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("height", "int", 0, "AOI height", "", &Bluefox2DynConfig::height)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("height", "int", 0, "AOI height", "", &Bluefox2DynConfig::height)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.idpf = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.idpf = 22;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.idpf = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("idpf", "int", 0, "Defines the pixel format of the resulting image", "{'enum_description': 'Defines the pixel format of the resulting image', 'enum': [{'srcline': 22, 'description': 'The driver will decide which format to use', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'idpf_auto'}, {'srcline': 23, 'description': 'An unprocessed block of data', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'idpf_raw'}, {'srcline': 24, 'description': 'A mono channel 8 bit', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'idpf_mono8'}, {'srcline': 25, 'description': 'A mono channel 16 bit', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 9, 'ctype': 'int', 'type': 'int', 'name': 'idpf_mono16'}, {'srcline': 26, 'description': 'RGB with 24 bit per pixel', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 10, 'ctype': 'int', 'type': 'int', 'name': 'idpf_rgb888_packed'}, {'srcline': 27, 'description': 'BGR with 24 bit per pixel', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 22, 'ctype': 'int', 'type': 'int', 'name': 'idpf_bgr888_packed'}]}", &Bluefox2DynConfig::idpf)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("idpf", "int", 0, "Defines the pixel format of the resulting image", "{'enum_description': 'Defines the pixel format of the resulting image', 'enum': [{'srcline': 22, 'description': 'The driver will decide which format to use', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'idpf_auto'}, {'srcline': 23, 'description': 'An unprocessed block of data', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'idpf_raw'}, {'srcline': 24, 'description': 'A mono channel 8 bit', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'idpf_mono8'}, {'srcline': 25, 'description': 'A mono channel 16 bit', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 9, 'ctype': 'int', 'type': 'int', 'name': 'idpf_mono16'}, {'srcline': 26, 'description': 'RGB with 24 bit per pixel', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 10, 'ctype': 'int', 'type': 'int', 'name': 'idpf_rgb888_packed'}, {'srcline': 27, 'description': 'BGR with 24 bit per pixel', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 22, 'ctype': 'int', 'type': 'int', 'name': 'idpf_bgr888_packed'}]}", &Bluefox2DynConfig::idpf)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.cbm = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.cbm = 3;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.cbm = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("cbm", "int", 0, "Camera binning mode", "{'enum_description': 'Defines valid binning modes for the camera', 'enum': [{'srcline': 36, 'description': 'No binning', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'cbm_off'}, {'srcline': 38, 'description': 'Horizontal binning (combines 2 adjacent columns)', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'cbm_binning_h'}, {'srcline': 40, 'description': 'Vertical binning (combines 2 adjacent rows)', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'cbm_binning_v'}, {'srcline': 42, 'description': 'Horizontal and vertical binning', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'cbm_binning_hv'}]}", &Bluefox2DynConfig::cbm)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("cbm", "int", 0, "Camera binning mode", "{'enum_description': 'Defines valid binning modes for the camera', 'enum': [{'srcline': 36, 'description': 'No binning', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'cbm_off'}, {'srcline': 38, 'description': 'Horizontal binning (combines 2 adjacent columns)', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'cbm_binning_h'}, {'srcline': 40, 'description': 'Vertical binning (combines 2 adjacent rows)', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'cbm_binning_v'}, {'srcline': 42, 'description': 'Horizontal and vertical binning', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'cbm_binning_hv'}]}", &Bluefox2DynConfig::cbm)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.aec = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.aec = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.aec = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<bool>("aec", "bool", 0, "Automatic exposure control", "", &Bluefox2DynConfig::aec)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<bool>("aec", "bool", 0, "Automatic exposure control", "", &Bluefox2DynConfig::aec)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.expose_us = 10;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.expose_us = 100000;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.expose_us = 10000;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("expose_us", "int", 0, "Exposure time for an image in us", "", &Bluefox2DynConfig::expose_us)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("expose_us", "int", 0, "Exposure time for an image in us", "", &Bluefox2DynConfig::expose_us)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.agc = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.agc = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.agc = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<bool>("agc", "bool", 0, "Automatic gain control", "", &Bluefox2DynConfig::agc)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<bool>("agc", "bool", 0, "Automatic gain control", "", &Bluefox2DynConfig::agc)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.gain_db = 0.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.gain_db = 32.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.gain_db = 0.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<double>("gain_db", "double", 0, "Gain in dB", "", &Bluefox2DynConfig::gain_db)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<double>("gain_db", "double", 0, "Gain in dB", "", &Bluefox2DynConfig::gain_db)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.acs = -1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.acs = 2;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.acs = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("acs", "int", 0, "Auto control speed", "{'enum_description': 'Defines valid AutoControlSpeed modes', 'enum': [{'srcline': 69, 'description': 'auto control parameters not available', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': -1, 'ctype': 'int', 'type': 'int', 'name': 'acs_unavailable'}, {'srcline': 71, 'description': 'coverge slowly to desired value', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'acs_slow'}, {'srcline': 73, 'description': 'converge to desired value at medium speed', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'acs_medium'}, {'srcline': 75, 'description': 'converge fast to desired value', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'acs_fast'}]}", &Bluefox2DynConfig::acs)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("acs", "int", 0, "Auto control speed", "{'enum_description': 'Defines valid AutoControlSpeed modes', 'enum': [{'srcline': 69, 'description': 'auto control parameters not available', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': -1, 'ctype': 'int', 'type': 'int', 'name': 'acs_unavailable'}, {'srcline': 71, 'description': 'coverge slowly to desired value', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'acs_slow'}, {'srcline': 73, 'description': 'converge to desired value at medium speed', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'acs_medium'}, {'srcline': 75, 'description': 'converge fast to desired value', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'acs_fast'}]}", &Bluefox2DynConfig::acs)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.des_grey_value = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.des_grey_value = 255;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.des_grey_value = 85;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("des_grey_value", "int", 0, "desired average grey value", "", &Bluefox2DynConfig::des_grey_value)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("des_grey_value", "int", 0, "desired average grey value", "", &Bluefox2DynConfig::des_grey_value)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.hdr = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.hdr = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.hdr = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<bool>("hdr", "bool", 0, "High dynamic range", "", &Bluefox2DynConfig::hdr)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<bool>("hdr", "bool", 0, "High dynamic range", "", &Bluefox2DynConfig::hdr)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.dcfm = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.dcfm = 3;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.dcfm = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("dcfm", "int", 0, "Operation mode of the dark current filter", "{'enum_description': 'Defines valid modes for the dark current filter', 'enum': [{'srcline': 93, 'description': 'filter is switched off', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'dcfm_off'}, {'srcline': 94, 'description': 'filter is switched on', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'dcfm_on'}, {'srcline': 96, 'description': 'calculate dark current corrention image', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'dcfm_calibrate'}, {'srcline': 98, 'description': 'replace captured image with the last correction image', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'correction_image'}]}", &Bluefox2DynConfig::dcfm)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("dcfm", "int", 0, "Operation mode of the dark current filter", "{'enum_description': 'Defines valid modes for the dark current filter', 'enum': [{'srcline': 93, 'description': 'filter is switched off', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'dcfm_off'}, {'srcline': 94, 'description': 'filter is switched on', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'dcfm_on'}, {'srcline': 96, 'description': 'calculate dark current corrention image', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'dcfm_calibrate'}, {'srcline': 98, 'description': 'replace captured image with the last correction image', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'correction_image'}]}", &Bluefox2DynConfig::dcfm)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.cpc = 12000;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.cpc = 50000;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.cpc = 40000;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("cpc", "int", 0, "Pixel clock of the camera sensor in KHz", "{'enum_description': 'Defines valid camrea pixel frequencies', 'enum': [{'srcline': 106, 'description': '12 Mhz', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 12000, 'ctype': 'int', 'type': 'int', 'name': 'cpc_12000'}, {'srcline': 107, 'description': '20 Mhz', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 20000, 'ctype': 'int', 'type': 'int', 'name': 'cpc_20000'}, {'srcline': 108, 'description': '24 Mhz', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 24000, 'ctype': 'int', 'type': 'int', 'name': 'cpc_24000'}, {'srcline': 109, 'description': '27 Mhz', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 27000, 'ctype': 'int', 'type': 'int', 'name': 'cpc_27000'}, {'srcline': 110, 'description': '32 Mhz', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 32000, 'ctype': 'int', 'type': 'int', 'name': 'cpc_32000'}, {'srcline': 111, 'description': '40 Mhz', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 40000, 'ctype': 'int', 'type': 'int', 'name': 'cpc_40000'}, {'srcline': 112, 'description': '50 Mhz', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 50000, 'ctype': 'int', 'type': 'int', 'name': 'cpc_50000'}]}", &Bluefox2DynConfig::cpc)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("cpc", "int", 0, "Pixel clock of the camera sensor in KHz", "{'enum_description': 'Defines valid camrea pixel frequencies', 'enum': [{'srcline': 106, 'description': '12 Mhz', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 12000, 'ctype': 'int', 'type': 'int', 'name': 'cpc_12000'}, {'srcline': 107, 'description': '20 Mhz', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 20000, 'ctype': 'int', 'type': 'int', 'name': 'cpc_20000'}, {'srcline': 108, 'description': '24 Mhz', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 24000, 'ctype': 'int', 'type': 'int', 'name': 'cpc_24000'}, {'srcline': 109, 'description': '27 Mhz', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 27000, 'ctype': 'int', 'type': 'int', 'name': 'cpc_27000'}, {'srcline': 110, 'description': '32 Mhz', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 32000, 'ctype': 'int', 'type': 'int', 'name': 'cpc_32000'}, {'srcline': 111, 'description': '40 Mhz', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 40000, 'ctype': 'int', 'type': 'int', 'name': 'cpc_40000'}, {'srcline': 112, 'description': '50 Mhz', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 50000, 'ctype': 'int', 'type': 'int', 'name': 'cpc_50000'}]}", &Bluefox2DynConfig::cpc)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.ctm = -1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.ctm = 5;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.ctm = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("ctm", "int", 0, "Camera trigger mode", "{'enum_description': 'Defines valid camera sensor trigger modes', 'enum': [{'srcline': 122, 'description': 'continuously exposes images', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'ctm_continuous'}, {'srcline': 124, 'description': 'start frame expose when software asks for an image', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'ctm_on_demand'}, {'srcline': 126, 'description': 'start the exposure of a frame when the trigger input is below the trigger threshold', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'ctm_on_low_level'}, {'srcline': 128, 'description': 'start the exposure of a frame when the trigger input is above the trigger threshold', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'ctm_on_high_level'}, {'srcline': 130, 'description': 'start the exposure of a frame when the trigger input level changes from high to low', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'ctm_on_falling_edge'}, {'srcline': 132, 'description': 'start the exposure of a frame when the trigger input level changes from low to high', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'ctm_on_rising_edge'}, {'srcline': 134, 'description': 'hardware sync with master and slave (stereo only, hack)', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': -1, 'ctype': 'int', 'type': 'int', 'name': 'hard_sync'}]}", &Bluefox2DynConfig::ctm)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("ctm", "int", 0, "Camera trigger mode", "{'enum_description': 'Defines valid camera sensor trigger modes', 'enum': [{'srcline': 122, 'description': 'continuously exposes images', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'ctm_continuous'}, {'srcline': 124, 'description': 'start frame expose when software asks for an image', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'ctm_on_demand'}, {'srcline': 126, 'description': 'start the exposure of a frame when the trigger input is below the trigger threshold', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'ctm_on_low_level'}, {'srcline': 128, 'description': 'start the exposure of a frame when the trigger input is above the trigger threshold', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'ctm_on_high_level'}, {'srcline': 130, 'description': 'start the exposure of a frame when the trigger input level changes from high to low', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'ctm_on_falling_edge'}, {'srcline': 132, 'description': 'start the exposure of a frame when the trigger input level changes from low to high', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'ctm_on_rising_edge'}, {'srcline': 134, 'description': 'hardware sync with master and slave (stereo only, hack)', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': -1, 'ctype': 'int', 'type': 'int', 'name': 'hard_sync'}]}", &Bluefox2DynConfig::ctm)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.cts = -1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.cts = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.cts = -1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("cts", "int", 0, "Camera trigger source", "{'enum_description': 'Defined valie camera sensor trigger source values', 'enum': [{'srcline': 144, 'description': 'trigger mode is continuous or on_demand', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': -1, 'ctype': 'int', 'type': 'int', 'name': 'cts_unavailable'}, {'srcline': 146, 'description': 'Uses digital input 0 as the source for the trigger signal', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'cts_dig_in_0'}, {'srcline': 148, 'description': 'Use digital input 1 as the source for the trigger signal', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'cts_dig_in_1'}]}", &Bluefox2DynConfig::cts)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("cts", "int", 0, "Camera trigger source", "{'enum_description': 'Defined valie camera sensor trigger source values', 'enum': [{'srcline': 144, 'description': 'trigger mode is continuous or on_demand', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': -1, 'ctype': 'int', 'type': 'int', 'name': 'cts_unavailable'}, {'srcline': 146, 'description': 'Uses digital input 0 as the source for the trigger signal', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'cts_dig_in_0'}, {'srcline': 148, 'description': 'Use digital input 1 as the source for the trigger signal', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'cts_dig_in_1'}]}", &Bluefox2DynConfig::cts)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.request = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.request = 4;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.request = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("request", "int", 0, "Prefill capture queue by request", "", &Bluefox2DynConfig::request)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("request", "int", 0, "Prefill capture queue by request", "", &Bluefox2DynConfig::request)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.wbp = -1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.wbp = 10;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.wbp = 6;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("wbp", "int", 0, "white balance parameter", "{'enum_description': 'An enum to set white balance paramter', 'enum': [{'srcline': 161, 'description': 'not available', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': -1, 'ctype': 'int', 'type': 'int', 'name': 'wbp_unavailable'}, {'srcline': 162, 'description': 'Tungsten', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'wbp_tungsten'}, {'srcline': 163, 'description': 'Halogen', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'wbp_halogen'}, {'srcline': 164, 'description': 'Fluorescent', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'wbp_fluorescent'}, {'srcline': 165, 'description': 'Day light', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'wbp_daylight'}, {'srcline': 166, 'description': 'Photo Light', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'wbp_photolight'}, {'srcline': 167, 'description': 'Blue Sky', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'wbp_bluesky'}, {'srcline': 168, 'description': 'User1', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 6, 'ctype': 'int', 'type': 'int', 'name': 'wbp_user1'}, {'srcline': 169, 'description': 'Calibrate', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 10, 'ctype': 'int', 'type': 'int', 'name': 'wbp_calibrate'}]}", &Bluefox2DynConfig::wbp)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<int>("wbp", "int", 0, "white balance parameter", "{'enum_description': 'An enum to set white balance paramter', 'enum': [{'srcline': 161, 'description': 'not available', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': -1, 'ctype': 'int', 'type': 'int', 'name': 'wbp_unavailable'}, {'srcline': 162, 'description': 'Tungsten', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'wbp_tungsten'}, {'srcline': 163, 'description': 'Halogen', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'wbp_halogen'}, {'srcline': 164, 'description': 'Fluorescent', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'wbp_fluorescent'}, {'srcline': 165, 'description': 'Day light', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'wbp_daylight'}, {'srcline': 166, 'description': 'Photo Light', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'wbp_photolight'}, {'srcline': 167, 'description': 'Blue Sky', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'wbp_bluesky'}, {'srcline': 168, 'description': 'User1', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 6, 'ctype': 'int', 'type': 'int', 'name': 'wbp_user1'}, {'srcline': 169, 'description': 'Calibrate', 'srcfile': '/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg', 'cconsttype': 'const int', 'value': 10, 'ctype': 'int', 'type': 'int', 'name': 'wbp_calibrate'}]}", &Bluefox2DynConfig::wbp)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.r_gain = 0.1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.r_gain = 10.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.r_gain = 1.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<double>("r_gain", "double", 0, "red gain", "", &Bluefox2DynConfig::r_gain)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<double>("r_gain", "double", 0, "red gain", "", &Bluefox2DynConfig::r_gain)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.g_gain = 0.1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.g_gain = 10.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.g_gain = 1.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<double>("g_gain", "double", 0, "green gain", "", &Bluefox2DynConfig::g_gain)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<double>("g_gain", "double", 0, "green gain", "", &Bluefox2DynConfig::g_gain)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.b_gain = 0.1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.b_gain = 10.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.b_gain = 1.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<double>("b_gain", "double", 0, "blue gain", "", &Bluefox2DynConfig::b_gain)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(Bluefox2DynConfig::AbstractParamDescriptionConstPtr(new Bluefox2DynConfig::ParamDescription<double>("b_gain", "double", 0, "blue gain", "", &Bluefox2DynConfig::b_gain)));
//#line 235 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 235 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(Bluefox2DynConfig::AbstractGroupDescriptionConstPtr(new Bluefox2DynConfig::GroupDescription<Bluefox2DynConfig::DEFAULT, Bluefox2DynConfig>(Default)));
//#line 353 "/opt/ros/indigo/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<Bluefox2DynConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__); 
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__); 
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__); 
    }
    std::vector<Bluefox2DynConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<Bluefox2DynConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    Bluefox2DynConfig __max__;
    Bluefox2DynConfig __min__;
    Bluefox2DynConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const Bluefox2DynConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static Bluefox2DynConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &Bluefox2DynConfig::__getDescriptionMessage__() 
  {
    return __get_statics__()->__description_message__;
  }

  inline const Bluefox2DynConfig &Bluefox2DynConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }
  
  inline const Bluefox2DynConfig &Bluefox2DynConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }
  
  inline const Bluefox2DynConfig &Bluefox2DynConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }
  
  inline const std::vector<Bluefox2DynConfig::AbstractParamDescriptionConstPtr> &Bluefox2DynConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<Bluefox2DynConfig::AbstractGroupDescriptionConstPtr> &Bluefox2DynConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const Bluefox2DynConfigStatics *Bluefox2DynConfig::__get_statics__()
  {
    const static Bluefox2DynConfigStatics *statics;
  
    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = Bluefox2DynConfigStatics::get_instance();
    
    return statics;
  }

//#line 22 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_idpf_auto = 0;
//#line 23 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_idpf_raw = 1;
//#line 24 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_idpf_mono8 = 2;
//#line 25 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_idpf_mono16 = 9;
//#line 26 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_idpf_rgb888_packed = 10;
//#line 27 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_idpf_bgr888_packed = 22;
//#line 36 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_cbm_off = 0;
//#line 38 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_cbm_binning_h = 1;
//#line 40 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_cbm_binning_v = 2;
//#line 42 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_cbm_binning_hv = 3;
//#line 69 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_acs_unavailable = -1;
//#line 71 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_acs_slow = 0;
//#line 73 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_acs_medium = 1;
//#line 75 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_acs_fast = 2;
//#line 93 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_dcfm_off = 0;
//#line 94 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_dcfm_on = 1;
//#line 96 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_dcfm_calibrate = 2;
//#line 98 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_correction_image = 3;
//#line 106 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_cpc_12000 = 12000;
//#line 107 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_cpc_20000 = 20000;
//#line 108 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_cpc_24000 = 24000;
//#line 109 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_cpc_27000 = 27000;
//#line 110 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_cpc_32000 = 32000;
//#line 111 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_cpc_40000 = 40000;
//#line 112 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_cpc_50000 = 50000;
//#line 122 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_ctm_continuous = 0;
//#line 124 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_ctm_on_demand = 1;
//#line 126 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_ctm_on_low_level = 2;
//#line 128 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_ctm_on_high_level = 3;
//#line 130 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_ctm_on_falling_edge = 4;
//#line 132 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_ctm_on_rising_edge = 5;
//#line 134 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_hard_sync = -1;
//#line 144 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_cts_unavailable = -1;
//#line 146 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_cts_dig_in_0 = 0;
//#line 148 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_cts_dig_in_1 = 1;
//#line 161 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_wbp_unavailable = -1;
//#line 162 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_wbp_tungsten = 0;
//#line 163 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_wbp_halogen = 1;
//#line 164 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_wbp_fluorescent = 2;
//#line 165 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_wbp_daylight = 3;
//#line 166 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_wbp_photolight = 4;
//#line 167 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_wbp_bluesky = 5;
//#line 168 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_wbp_user1 = 6;
//#line 169 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_wbp_calibrate = 10;
//#line 180 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_mm_off = 0;
//#line 181 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_mm_topdown = 1;
//#line 182 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_mm_leftright = 2;
//#line 184 "/home/ubuntu/fyp/catkin_ws/src/bluefox2/cfg/Bluefox2Dyn.cfg"
      const int Bluefox2Dyn_mm_topdown_and_leftright = 3;
}

#endif // __BLUEFOX2DYNRECONFIGURATOR_H__
